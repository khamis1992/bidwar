name: Advanced APK Build & Release

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release
      version_name:
        description: 'Version name (e.g., 1.0.0)'
        required: false
        default: '1.0.0'
      create_release:
        description: 'Create GitHub release'
        required: false
        default: true
        type: boolean
        
env:
  FLUTTER_VERSION: '3.24.3'
  JAVA_VERSION: '17'

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    outputs:
      apk-path: ${{ steps.build-info.outputs.apk-path }}
      version-code: ${{ steps.build-info.outputs.version-code }}
      
    steps:
    - name: 📱 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: 📋 Flutter Doctor
      run: |
        flutter doctor -v
        flutter --version
        
    - name: 🔐 Create environment configuration
      run: |
        cat > env.json << EOF
        {
          "SUPABASE_URL": "${{ secrets.SUPABASE_URL || 'https://lelkttetaguswijpdnsb.supabase.co' }}",
          "SUPABASE_ANON_KEY": "${{ secrets.SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxlbGt0dGV0YWd1c3dpanBkbnNiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTYyMzA2OTgsImV4cCI6MjA3MTgwNjY5OH0.wS2ko7O7glbg0Ekw-QHY9WB7HkFOGwohlO_Zwr8ByLw' }}",
          "OPENAI_API_KEY": "${{ secrets.OPENAI_API_KEY || 'demo-key' }}",
          "GEMINI_API_KEY": "${{ secrets.GEMINI_API_KEY || 'demo-key' }}",
          "ANTHROPIC_API_KEY": "${{ secrets.ANTHROPIC_API_KEY || 'demo-key' }}",
          "PERPLEXITY_API_KEY": "${{ secrets.PERPLEXITY_API_KEY || 'demo-key' }}"
        }
        EOF
        echo "✅ Environment file created"
        
    - name: 📦 Install dependencies
      run: |
        flutter pub get
        flutter pub deps
        
    - name: 🔍 Code analysis
      run: |
        echo "🔍 Running Flutter analyze..."
        flutter analyze --no-fatal-infos || echo "⚠️ Analysis completed with warnings"
        
    - name: 🧪 Run tests
      run: |
        echo "🧪 Running tests..."
        flutter test --no-pub --reporter=expanded || echo "⚠️ Some tests failed"
        
    - name: 📝 Update version
      if: ${{ github.event.inputs.version_name != '' }}
      run: |
        # Update pubspec.yaml with new version
        sed -i "s/version: .*/version: ${{ github.event.inputs.version_name }}+${{ github.run_number }}/" pubspec.yaml
        echo "✅ Version updated to ${{ github.event.inputs.version_name }}+${{ github.run_number }}"
        
    - name: 🔐 Setup release signing (if secrets available)
      if: ${{ github.event.inputs.build_type == 'release' && secrets.ANDROID_SIGNING_KEY_ALIAS != '' }}
      run: |
        echo "🔐 Setting up release signing..."
        
        # Create keystore from base64 secret
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks
        
        # Create key.properties
        cat > android/key.properties << EOF
        storePassword=${{ secrets.ANDROID_STORE_PASSWORD }}
        keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}
        keyAlias=${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
        storeFile=keystore.jks
        EOF
        
        echo "✅ Release signing configured"
        
    - name: 🔨 Build APK (Debug)
      if: ${{ github.event.inputs.build_type == 'debug' }}
      run: |
        echo "🔨 Building debug APK..."
        flutter build apk --debug --dart-define-from-file=env.json --verbose
        echo "✅ Debug APK built successfully"
        
    - name: 🔨 Build APK (Release)
      if: ${{ github.event.inputs.build_type == 'release' }}
      run: |
        echo "🔨 Building release APK..."
        flutter build apk --release --dart-define-from-file=env.json --verbose
        echo "✅ Release APK built successfully"
        
    - name: 📊 Build information
      id: build-info
      run: |
        APK_PATH=$(find build/app/outputs/flutter-apk -name '*.apk' | head -1)
        VERSION_CODE=${{ github.run_number }}
        
        echo "apk-path=$APK_PATH" >> $GITHUB_OUTPUT
        echo "version-code=$VERSION_CODE" >> $GITHUB_OUTPUT
        
        echo "📊 Build Information:"
        echo "   APK Path: $APK_PATH"
        echo "   File Size: $(du -h $APK_PATH | cut -f1)"
        echo "   Version Code: $VERSION_CODE"
        echo "   Build Type: ${{ github.event.inputs.build_type }}"
        
        ls -la build/app/outputs/flutter-apk/
        
    - name: 🧹 Cleanup sensitive files
      if: always()
      run: |
        rm -f android/app/keystore.jks
        rm -f android/key.properties
        rm -f env.json
        echo "✅ Sensitive files cleaned up"
        
    - name: 📤 Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: bidwar-${{ github.event.inputs.build_type }}-apk-${{ github.run_number }}
        path: build/app/outputs/flutter-apk/*.apk
        retention-days: 30
        
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-android
    if: ${{ github.event.inputs.create_release == 'true' }}
    
    steps:
    - name: 📱 Checkout repository
      uses: actions/checkout@v4
      
    - name: 📥 Download APK artifact
      uses: actions/download-artifact@v4
      with:
        name: bidwar-${{ github.event.inputs.build_type }}-apk-${{ github.run_number }}
        path: ./apk
        
    - name: 🏷️ Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.event.inputs.version_name || '1.0.0' }}-build-${{ github.run_number }}
        name: 🚀 BidWar v${{ github.event.inputs.version_name || '1.0.0' }} (Build ${{ github.run_number }})
        draft: false
        prerelease: ${{ github.event.inputs.build_type == 'debug' }}
        files: |
          ./apk/*.apk
        body: |
          ## 🚀 BidWar Release v${{ github.event.inputs.version_name || '1.0.0' }}
          
          ### 📱 **What's New:**
          - Android APK ready for installation
          - Build Type: **${{ github.event.inputs.build_type }}**
          - Build Number: **${{ github.run_number }}**
          - Commit: `${{ github.sha }}`
          
          ### 📋 **Installation Instructions:**
          1. 📥 Download the APK file below
          2. ⚙️ Enable "Install from unknown sources" on your Android device
          3. 📱 Install the APK
          4. 🎉 Enjoy BidWar!
          
          ### 🔧 **Technical Details:**
          - **Flutter Version:** ${{ env.FLUTTER_VERSION }}
          - **Target SDK:** 34
          - **Min SDK:** 23
          - **Architecture:** arm64-v8a, armeabi-v7a, x86_64
          
          ### ⚠️ **Important Notes:**
          ${{ github.event.inputs.build_type == 'debug' && '- This is a **DEBUG** build for testing purposes only' || '- This is a **RELEASE** build ready for production' }}
          - Make sure to uninstall previous versions before installing
          - Report any issues on the GitHub Issues page
          
          ---
          *Built with ❤️ using GitHub Actions*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 📊 Release summary
      run: |
        echo "## 📊 Release Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Version:** v${{ github.event.inputs.version_name || '1.0.0' }}-build-${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Type:** ${{ github.event.inputs.build_type }}" >> $GITHUB_STEP_SUMMARY
        echo "- **APK Size:** $(du -h ./apk/*.apk | cut -f1)" >> $GITHUB_STEP_SUMMARY
        echo "- **Status:** ✅ Release created successfully" >> $GITHUB_STEP_SUMMARY